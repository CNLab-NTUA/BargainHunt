* OAuth 2 token - done
* PostgreSQL @ Heroku - done - ignored
* Conditional requests sto api tou skroutz. - done
* Implement product requests - done
* Paginated results - done
* Generic client - done
* Δημιουργία tables - done
* Implement OutlierFinder - done
* Implement command line demo app - done
* Postgres @ Okeanos - done

-- version 0.5 --

* Implement filtering - done
* Add table to database with : unique request - etag to perform conditional requests - don
* webapp: create skroutz entity manager - done
* webapp: save all requests to database if they are successful - done
* server: add eclipselink to remote wildfly - done
* webapp: stopped implementing resteasy client cause the api lacks basic functionality - done
* persistence: properly map entities so that they include their relation id and object - done
* webapp: first version of vaadin app - done
* webapp: single item query logic to implement - done

send single item query
2. check db for entity
3. if entity exists and has etag
    |- send conditional request with etag
    |- if 304 is returned
        |- return database result
    |- else update entity in database
        |- return rest entity
4. else send unconditional request
    |- persist or merge entity in database
    |- return rest entity

-- version 0.6 --

done: enable prices table

todo daily crawl app

todo implement gruubs, chauvenet

-- version 0.7 --

todo vaadin graphs

-- version 0.8 --

todo fix UI, tiles, views etc

-- version 0.9 --

todo responsive uis

-- version 1.0 --